[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 powrunr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2025). powrunr: Power Analysis Simulation. R package version 0.0.0.9000.","code":"@Manual{,   title = {powrunr: Power Analysis Through Simulation},   author = {First Last},   year = {2025},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"powrunr","dir":"","previous_headings":"","what":"Power Analysis Through Simulation","title":"Power Analysis Through Simulation","text":"goal powrunr …","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Power Analysis Through Simulation","text":"can install development version powrunr like :","code":"# FILL THIS IN! HOW CAN PEOPLE INSTALL YOUR DEV PACKAGE?"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Power Analysis Through Simulation","text":"basic example shows solve common problem:","code":"library(powrunr) ## basic example code"},{"path":"/reference/anova_runr.html","id":null,"dir":"Reference","previous_headings":"","what":"ANOVA-based power simulation — anova_runr","title":"ANOVA-based power simulation — anova_runr","text":"Runs simulations estimate statistical power ANOVA tests detecting differences treatment groups. function generates data specified distribution, performs ANOVA analysis, returns results post-hoc tests.","code":""},{"path":"/reference/anova_runr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ANOVA-based power simulation — anova_runr","text":"","code":"anova_runr(   num_sim,   n,   mean,   sd,   max_trt_eff,   ntrts,   distribution = \"normal\",   prob = NULL,   size = NULL )"},{"path":"/reference/anova_runr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ANOVA-based power simulation — anova_runr","text":"num_sim Number simulations perform. n number observations per treatment group. mean mean response random variable control group. sd standard deviation response random variable (normal distribution). max_trt_eff maximum treatment effect (difference control). ntrts number treatments (including control). distribution distribution generate random variable. Options \"normal\", \"poisson\", \"logistic\", \"negbin\". prob Probability success (negative binomial logistic). size target number successful trials (negative binomial logistic).","code":""},{"path":"/reference/anova_runr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ANOVA-based power simulation — anova_runr","text":"data frame contrasts p-values post-hoc tests.","code":""},{"path":"/reference/anova_runr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ANOVA-based power simulation — anova_runr","text":"","code":"if (FALSE) { # \\dontrun{ # Simple example with 5 simulations anova_runr(num_sim = 5, n = 10, mean = 100, sd = 15, max_trt_eff = 20, ntrts = 5)  # Calculate power by summarizing results sims <- anova_runr(num_sim = 20, n = 10, mean = 100, sd = 15, max_trt_eff = 20, ntrts = 3) power <- mean(sims$p.value < 0.05, na.rm = TRUE) } # }"},{"path":"/reference/dunnett_runr.html","id":null,"dir":"Reference","previous_headings":"","what":"Dunnett-based power simulation — dunnett_runr","title":"Dunnett-based power simulation — dunnett_runr","text":"Runs simulations estimate statistical power Dunnett's test comparing multiple treatment groups control. function generates data specified distribution, performs ANOVA analysis, returns results Dunnett's post-hoc tests.","code":""},{"path":"/reference/dunnett_runr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dunnett-based power simulation — dunnett_runr","text":"","code":"dunnett_runr(   num_sim,   n,   mean,   sd,   max_trt_eff,   ntrts,   distribution = \"normal\",   prob = NULL,   size = NULL )"},{"path":"/reference/dunnett_runr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dunnett-based power simulation — dunnett_runr","text":"num_sim Number simulations perform. n number observations per treatment group. mean mean response random variable control group. sd standard deviation response random variable (normal distribution). max_trt_eff maximum treatment effect (difference control). ntrts number treatments (including control). distribution distribution generate random variable. Options \"normal\", \"poisson\", \"logistic\", \"negbin\". prob Probability success (negative binomial logistic). size target number successful trials (negative binomial logistic).","code":""},{"path":"/reference/dunnett_runr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dunnett-based power simulation — dunnett_runr","text":"data frame contrasts p-values Dunnett's tests.","code":""},{"path":"/reference/dunnett_runr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dunnett-based power simulation — dunnett_runr","text":"","code":"if (FALSE) { # \\dontrun{ # Simple example with 5 simulations dunnett_runr(num_sim = 5, n = 10, mean = 100, sd = 15, max_trt_eff = 20, ntrts = 5)  # Calculate power by summarizing results sims <- dunnett_runr(num_sim = 20, n = 10, mean = 100, sd = 15, max_trt_eff = 20, ntrts = 3) power <- mean(sims$p.value < 0.05, na.rm = TRUE) } # }"},{"path":"/reference/generate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data (random variable) from a given distribution — generate_data","title":"Generate data (random variable) from a given distribution — generate_data","text":"parameters expected random variable used draw random sample given probability distribution.","code":""},{"path":"/reference/generate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data (random variable) from a given distribution — generate_data","text":"","code":"generate_data(   distribution,   n,   mean = NULL,   sd = NULL,   size = NULL,   prob = NULL )"},{"path":"/reference/generate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data (random variable) from a given distribution — generate_data","text":"distribution probability distribution. n number values draw probability distribution. mean mean (central tendency). sd standard deviation (variability). size target number successful trials. prob probability success independent identical trial.","code":""},{"path":"/reference/generate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate data (random variable) from a given distribution — generate_data","text":"vector random deviates whose length n","code":""},{"path":"/reference/generate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate data (random variable) from a given distribution — generate_data","text":"","code":"generate_data(\"normal\", 6, 2.5, 1.3) #> [1]  0.6799434  2.8319122 -0.6684427  2.4927573  3.3080185  3.9929351 generate_data(\"poisson\", 6, 2.5) #> [1] 0 2 2 1 2 0 generate_data(\"logistic\", 6, prob = 0.5, size = 1) #> [1] 0 1 0 1 1 0 generate_data(\"negbin\", 6, 2.5, size = 1) #> [1] 3 2 3 1 0 3"},{"path":"/reference/logit_runr.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic regression power simulation — logit_runr","title":"Logistic regression power simulation — logit_runr","text":"Runs simulations estimate statistical power logistic regression detecting differences treatment groups binary data. function generates data binomial distribution, performs logistic regression analysis, returns results post-hoc tests.","code":""},{"path":"/reference/logit_runr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic regression power simulation — logit_runr","text":"","code":"logit_runr(   num_sim,   n,   mean = NULL,   sd = NULL,   max_trt_eff,   ntrts,   distribution = \"logistic\",   size = 1,   prob = 0.5 )"},{"path":"/reference/logit_runr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic regression power simulation — logit_runr","text":"num_sim Number simulations perform. n number observations per treatment group. mean mean response random variable control group. sd standard deviation response random variable (normal distribution). max_trt_eff maximum treatment effect (difference control). ntrts number treatments (including control). distribution distribution generate random variable. Options \"normal\", \"poisson\", \"logistic\", \"negbin\". size target number successful trials (negative binomial logistic). prob Probability success (negative binomial logistic).","code":""},{"path":"/reference/logit_runr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logistic regression power simulation — logit_runr","text":"data frame contrasts p-values post-hoc tests.","code":""},{"path":"/reference/logit_runr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logistic regression power simulation — logit_runr","text":"","code":"if (FALSE) { # \\dontrun{ # Simple example with 5 simulations logit_runr(   num_sim = 5, n = 20, ntrts = 3, distribution = \"logistic\",   size = 1, prob = 0.7, max_trt_eff = 0.2 )  # Calculate power by summarizing results sims <- logit_runr(   num_sim = 20, n = 20, ntrts = 3, distribution = \"logistic\",   size = 1, prob = 0.7, max_trt_eff = 0.2 ) power <- mean(sims$p.value < 0.05, na.rm = TRUE) } # }"},{"path":"/reference/mock_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data frame with treatment and response random variable — mock_df","title":"Generate data frame with treatment and response random variable — mock_df","text":"Creates data frame treatment factor response variable use simulation studies. function generates data control group multiple treatment groups specified effects.","code":""},{"path":"/reference/mock_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data frame with treatment and response random variable — mock_df","text":"","code":"mock_df(   distribution = \"normal\",   ntrts,   n,   mean = NULL,   sd = NULL,   max_trt_eff = 0,   size = NULL,   prob = NULL )"},{"path":"/reference/mock_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data frame with treatment and response random variable — mock_df","text":"distribution distribution generate random variable. Options \"normal\", \"poisson\", \"logistic\", \"negbin\". ntrts number treatments (including control). n number observations per treatment group. mean mean response random variable control group. sd standard deviation response random variable (normal distribution). max_trt_eff maximum treatment effect (difference control). size target number successful trials (negative binomial logistic). prob Probability success (negative binomial logistic).","code":""},{"path":"/reference/mock_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate data frame with treatment and response random variable — mock_df","text":"data frame columns 'treatment' 'y'","code":""},{"path":"/reference/mock_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate data frame with treatment and response random variable — mock_df","text":"","code":"mock_df(\"normal\", 3, 3, 3, 1.5, 0.4) #> # A tibble: 9 × 2 #>   treatment     y #>   <chr>     <dbl> #> 1 control   4.11  #> 2 control   5.83  #> 3 control   2.85  #> 4 trt_1     1.40  #> 5 trt_1     2.78  #> 6 trt_1     1.56  #> 7 trt_2     0.331 #> 8 trt_2     4.00  #> 9 trt_2     2.86  mock_df(\"poisson\", 3, 3, 1.5) #> # A tibble: 9 × 2 #>   treatment     y #>   <chr>     <int> #> 1 control       2 #> 2 control       0 #> 3 control       4 #> 4 trt_1         1 #> 5 trt_1         1 #> 6 trt_1         1 #> 7 trt_2         1 #> 8 trt_2         1 #> 9 trt_2         0 mock_df(\"logistic\", 3, 3, prob = 0.5, size = 1) #> # A tibble: 9 × 2 #>   treatment     y #>   <chr>     <int> #> 1 control       0 #> 2 control       0 #> 3 control       0 #> 4 trt_1         1 #> 5 trt_1         1 #> 6 trt_1         0 #> 7 trt_2         1 #> 8 trt_2         1 #> 9 trt_2         1 mock_df(\"negbin\", 3, 3, 1.5, size = 1.5) #> # A tibble: 9 × 2 #>   treatment     y #>   <chr>     <dbl> #> 1 control       1 #> 2 control       0 #> 3 control       6 #> 4 trt_1         1 #> 5 trt_1         0 #> 6 trt_1         1 #> 7 trt_2         0 #> 8 trt_2         3 #> 9 trt_2         0"},{"path":"/reference/nb_runr.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative binomial regression power simulation — nb_runr","title":"Negative binomial regression power simulation — nb_runr","text":"Runs simulations estimate statistical power negative binomial regression detecting differences treatment groups count data. function generates data negative binomial distribution, performs regression analysis, returns results post-hoc tests.","code":""},{"path":"/reference/nb_runr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative binomial regression power simulation — nb_runr","text":"","code":"nb_runr(   num_sim,   n,   mean,   sd = NULL,   max_trt_eff,   ntrts,   distribution = \"negbin\",   size = 2,   prob = NULL )"},{"path":"/reference/nb_runr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative binomial regression power simulation — nb_runr","text":"num_sim Number simulations perform. n number observations per treatment group. mean mean response random variable control group. sd standard deviation response random variable (normal distribution). max_trt_eff maximum treatment effect (difference control). ntrts number treatments (including control). distribution distribution generate random variable. Options \"normal\", \"poisson\", \"logistic\", \"negbin\". size target number successful trials (negative binomial logistic). prob Probability success (negative binomial logistic).","code":""},{"path":"/reference/nb_runr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative binomial regression power simulation — nb_runr","text":"data frame contrasts p-values post-hoc tests.","code":""},{"path":"/reference/nb_runr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative binomial regression power simulation — nb_runr","text":"","code":"if (FALSE) { # \\dontrun{ # Simple example with 5 simulations nb_runr(num_sim = 5, n = 10, mean = 5, sd = 1, max_trt_eff = 2,        ntrts = 3, size = 2, distribution = \"negbin\")  # Calculate power by summarizing results sims <- nb_runr(num_sim = 20, n = 10, mean = 5, max_trt_eff = 2,                ntrts = 3, size = 2, distribution = \"negbin\") power <- mean(sims$p.value < 0.05, na.rm = TRUE) } # }"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/plot_pwr.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot simulated data for power against sample size, n — plot_pwr","title":"Plot simulated data for power against sample size, n — plot_pwr","text":"Creates visualization statistical power versus sample size, options grouping faceting. function helps researchers determine adequate sample sizes experimental designs.","code":""},{"path":"/reference/plot_pwr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot simulated data for power against sample size, n — plot_pwr","text":"","code":"plot_pwr(   data,   colpal,   n = \"n\",   p.value = \"p.value\",   group = \"sd\",   facet = NULL )"},{"path":"/reference/plot_pwr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot simulated data for power against sample size, n — plot_pwr","text":"data dataframe columns sample size, power estimates, grouping variables. colpal Character vector hexadecimal color values plot. n name sample size column data. p.value name power estimate column data. group name grouping variable column data (used coloring). facet name faceting variable data. Set NULL faceting.","code":""},{"path":"/reference/plot_pwr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot simulated data for power against sample size, n — plot_pwr","text":"ggplot object","code":""},{"path":"/reference/plot_pwr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot simulated data for power against sample size, n — plot_pwr","text":"","code":"# Create example data data <- data.frame(   n = rep(1:10, each = 3),   p.value = runif(30, 0.5, 0.9),   sd = rep(1:3, 10) ) colpal <- c(\"#00BFC4\", \"#F8766D\", \"#7CAE00\")  # Generate power plot with grouping but no faceting plot_pwr(data, colpal, group = \"sd\", facet = NULL)   # Generate power plot with both grouping and faceting by the same variable plot_pwr(data, colpal, group = \"sd\", facet = \"sd\")"},{"path":"/reference/pois_runr.html","id":null,"dir":"Reference","previous_headings":"","what":"Poisson regression power simulation — pois_runr","title":"Poisson regression power simulation — pois_runr","text":"Runs simulations estimate statistical power Poisson regression detecting differences treatment groups count data. function generates data Poisson distribution, performs regression analysis, returns results post-hoc tests.","code":""},{"path":"/reference/pois_runr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Poisson regression power simulation — pois_runr","text":"","code":"pois_runr(   num_sim,   n,   mean,   sd = NULL,   max_trt_eff,   ntrts,   distribution = \"poisson\",   size = NULL,   prob = NULL )"},{"path":"/reference/pois_runr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Poisson regression power simulation — pois_runr","text":"num_sim Number simulations perform. n number observations per treatment group. mean mean response random variable control group. sd standard deviation response random variable (normal distribution). max_trt_eff maximum treatment effect (difference control). ntrts number treatments (including control). distribution distribution generate random variable. Options \"normal\", \"poisson\", \"logistic\", \"negbin\". size target number successful trials (negative binomial logistic). prob Probability success (negative binomial logistic).","code":""},{"path":"/reference/pois_runr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Poisson regression power simulation — pois_runr","text":"data frame contrasts p-values post-hoc tests.","code":""},{"path":"/reference/pois_runr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Poisson regression power simulation — pois_runr","text":"","code":"if (FALSE) { # \\dontrun{ # Simple example with 5 simulations pois_runr(   num_sim = 5, n = 10, mean = 5, max_trt_eff = 2,   ntrts = 3, distribution = \"poisson\" )  # Calculate power by summarizing results sims <- pois_runr(   num_sim = 20, n = 10, mean = 5, max_trt_eff = 2,   ntrts = 3, distribution = \"poisson\" ) power <- mean(sims$p.value < 0.05, na.rm = TRUE) } # }"},{"path":"/reference/powrunr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"powrunr: Power Analysis Through Simulation — powrunr-package","title":"powrunr: Power Analysis Through Simulation — powrunr-package","text":"Generate simulated data calculate statistical power planned experiments.","code":""},{"path":"/reference/powrunr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"powrunr: Power Analysis Through Simulation — powrunr-package","text":"Maintainer: First Last first.last@example.com","code":""}]
